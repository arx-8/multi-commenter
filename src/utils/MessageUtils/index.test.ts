import {
  checkRemainingStatus,
  concatAsTweet,
  countRemaining,
  getLength,
  isValidComment,
} from "."

describe("getLength", () => {
  it("exact", () => {
    expect.hasAssertions()
    expect(getLength("")).toStrictEqual(0)
    expect(getLength("aaa")).toStrictEqual(3)
    expect(getLength("„ÅÇa")).toStrictEqual(3)
    expect(getLength("„ÅÇ„ÅÇ„ÅÇ")).toStrictEqual(6)
    expect(getLength("üçûüëèüê¨")).toStrictEqual(6)
  })
})

describe("countRemaining", () => {
  it("exact", () => {
    expect.hasAssertions()
    expect(countRemaining("")).toStrictEqual(200)
    expect(countRemaining("aaa")).toStrictEqual(197)
    expect(countRemaining("„ÅÇa")).toStrictEqual(197)
    expect(countRemaining("„ÅÇ„ÅÇ„ÅÇ")).toStrictEqual(194)
    expect(countRemaining("üçûüëèüê¨")).toStrictEqual(194)
    expect(
      countRemaining(
        "aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa.aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa."
      )
    ).toStrictEqual(0)
  })
})

describe("checkRemainingStatus", () => {
  it("exact", () => {
    expect.hasAssertions()
    expect(checkRemainingStatus(100)).toStrictEqual("ok")
    expect(checkRemainingStatus(99)).toStrictEqual("warn")
    expect(checkRemainingStatus(0)).toStrictEqual("warn")
    expect(checkRemainingStatus(-1)).toStrictEqual("error")
  })
})

describe("concatAsTweet", () => {
  it("exact", () => {
    expect.hasAssertions()
    expect(concatAsTweet("main", "suffix")).toStrictEqual("main suffix")
    expect(concatAsTweet("", "")).toStrictEqual("")
    expect(concatAsTweet(" ", "„ÄÄ")).toStrictEqual(" ")
    expect(concatAsTweet("main text", "")).toStrictEqual("main text")
    expect(concatAsTweet(" main text ", " ")).toStrictEqual(" main text ")
    expect(
      concatAsTweet(
        `Êú´Â∞æÊîπË°å„ÅÆÂ†¥Âêà
`,
        "#twitter"
      )
    ).toStrictEqual(`Êú´Â∞æÊîπË°å„ÅÆÂ†¥Âêà
#twitter`)
    expect(
      concatAsTweet(
        `final new line


`,
        "#twitter"
      )
    ).toStrictEqual(`final new line


#twitter`)
  })
})

describe("isValidComment", () => {
  it("valid", () => {
    expect.hasAssertions()
    expect(isValidComment("aaa")).toStrictEqual(true)
    expect(isValidComment("„ÅÇa")).toStrictEqual(true)
    expect(isValidComment("„ÅÇ„ÅÇ„ÅÇ")).toStrictEqual(true)
    expect(isValidComment("üçûüëèüê¨")).toStrictEqual(true)
  })

  it("invalid", () => {
    expect.hasAssertions()
    expect(isValidComment("")).toStrictEqual(false)
    expect(isValidComment("aaahttps://www.example.com/")).toStrictEqual(false)
    expect(isValidComment("„ÅÇhttp://")).toStrictEqual(false)
    expect(
      isValidComment(
        "aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa.aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa."
      )
    ).toStrictEqual(false)
  })
})
